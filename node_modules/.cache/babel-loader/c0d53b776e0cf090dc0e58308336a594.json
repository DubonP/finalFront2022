{"ast":null,"code":"import { API_URL } from \"../../app/constants\";\nexport const obterCita = async personagem => {\n  if (personagem && parseInt(personagem)) {\n    throw new Error(\"O nome deve ser um texto\");\n  }\n\n  const url = personagem ? `${API_URL}?character=${personagem}` : API_URL;\n  const resposta = await fetch(url);\n  const [data] = await resposta.json();\n  console.log(data);\n  const dataNormalizada = {\n    cita: data.quote,\n    personagem: data.character,\n    image: data.image,\n    direcaoPersonagem: data.characterDirection\n  };\n  return dataNormalizada;\n};","map":{"version":3,"names":["API_URL","obterCita","personagem","parseInt","Error","url","resposta","fetch","data","json","console","log","dataNormalizada","cita","quote","character","image","direcaoPersonagem","characterDirection"],"sources":["C:/Users/Paulo/Desktop/DH/2 bim DH-Especializacao/Frontend/Final/FinalDoCTD/FinalPauloRossi/src/features/quote/citaAPI.ts"],"sourcesContent":["import { API_URL } from \"../../app/constants\";\r\nimport { ICita } from \"./types\";\r\n\r\nexport const obterCita: (personagem?: string) => Promise<ICita> = async (\r\n  personagem\r\n) => {\r\n  if (personagem && parseInt(personagem)) {\r\n    throw new Error(\"O nome deve ser um texto\");\r\n  }\r\n\r\n  const url = personagem ? `${API_URL}?character=${personagem}` : API_URL;\r\n  const resposta = await fetch(url);\r\n  const [data] = await resposta.json();\r\n  console.log(data);\r\n\r\n  const dataNormalizada = {\r\n    cita: data.quote,\r\n    personagem: data.character,\r\n    image: data.image,\r\n    direcaoPersonagem: data.characterDirection,\r\n  };\r\n\r\n  return dataNormalizada;\r\n};\r\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,qBAAxB;AAGA,OAAO,MAAMC,SAAkD,GAAG,MAChEC,UADgE,IAE7D;EACH,IAAIA,UAAU,IAAIC,QAAQ,CAACD,UAAD,CAA1B,EAAwC;IACtC,MAAM,IAAIE,KAAJ,CAAU,0BAAV,CAAN;EACD;;EAED,MAAMC,GAAG,GAAGH,UAAU,GAAI,GAAEF,OAAQ,cAAaE,UAAW,EAAtC,GAA0CF,OAAhE;EACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;EACA,MAAM,CAACG,IAAD,IAAS,MAAMF,QAAQ,CAACG,IAAT,EAArB;EACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;EAEA,MAAMI,eAAe,GAAG;IACtBC,IAAI,EAAEL,IAAI,CAACM,KADW;IAEtBZ,UAAU,EAAEM,IAAI,CAACO,SAFK;IAGtBC,KAAK,EAAER,IAAI,CAACQ,KAHU;IAItBC,iBAAiB,EAAET,IAAI,CAACU;EAJF,CAAxB;EAOA,OAAON,eAAP;AACD,CApBM"},"metadata":{},"sourceType":"module"}